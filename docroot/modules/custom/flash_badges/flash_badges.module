<?php

/**
 * @file
 * Flash Demo Users.
 */

// function _flash_demo_users_users() {
//   return array(
//     'employee1' => array(
//       'uid' => '',
//       'field_first_name' => 'Bob',
//       'field_last_name' => 'Dob',
//       'kudos' => array('employee4', 'employee7')
//     ),

//     'employee2' => array(
//       'uid' => '',
//       'field_first_name' => 'Bill',
//       'field_last_name' => 'Dill',
//       'kudos' => array('employee4', 'employee7')
//     ),

//     'employee3' => array(
//       'uid' => '',
//       'field_first_name' => 'Marsha',
//       'field_last_name' => 'Larsha',
//       'kudos' => array('employee4', 'employee7')
//     ),

//     'employee4' => array(
//       'uid' => '',
//       'field_first_name' => 'Jeff',
//       'field_last_name' => 'Deff',
//       'kudos' => array('employee7')
//     ),

//     'employee5' => array(
//       'uid' => '',
//       'field_first_name' => 'Alex',
//       'field_last_name' => 'Kalex',
//       'kudos' => array('employee7')
//     ),

//     'employee6' => array(
//       'uid' => '',
//       'field_first_name' => 'Josh',
//       'field_last_name' => 'Rosh',
//       'kudos' => array('employee7')
//     ),

//     'employee7' => array(
//       'uid' => '',
//       'field_first_name' => 'Cathy',
//       'field_last_name' => 'Yathy',
//       'kudos' => array('employee1')
//     ),

//     'employee8' => array(
//       'uid' => '',
//       'field_first_name' => 'Kim',
//       'field_last_name' => 'Bim',
//       'kudos' => array('employee5')
//     ),

//     'employee9' => array(
//       'uid' => '',
//       'field_first_name' => 'Steve',
//       'field_last_name' => 'Peve',
//       'kudos' => array('employee5')
//     ),

//     'admin1' => array(
//       'uid' => '',
//       'role' => 'administrator',
//       'field_first_name' => 'Martha',
//       'field_last_name' => 'Tartha',
//       'kudos' => array()
//     ),

//     'admin2' => array(
//       'uid' => '',
//       'role' => 'administrator',
//       'field_first_name' => 'Fred',
//       'field_last_name' => 'Smed',
//       'kudos' => array()
//     ),

//     'admin3' => array(
//       'uid' => '',
//       'role' => 'administrator',
//       'field_first_name' => 'Tim',
//       'field_last_name' => 'Rim',
//       'kudos' => array()
//     ),
//   ); 
// }

// /**
//  * Adds demo users
//  */
// function flash_demo_users_create() {

//   if(user_load_by_name('employee1')) {
//     return FALSE;
//   }
  
//   $users =_flash_demo_users_users();
//   $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();

//   // Create demo users
//   foreach ($users as $name => $user_info) {
//     $user = \Drupal\user\Entity\User::create();
//     $user->setUsername($name);
//     $user->setPassword($name);
//     $user->enforceIsNew();
//     $role = empty($user_info['role']) ? 'employee' : $user_info['role'];
//     $user->addRole($role);
//     $user->set("preferred_langcode", $lang);
//     $user->set("preferred_admin_langcode", $lang);
//     $user->set('field_first_name', array(
//       'value' => $user_info['field_first_name']
//     ));
//     $user->set('field_last_name', array(
//       'value' => $user_info['field_last_name']
//     ));
//     $user->activate();
//     $result = $user->save();

//     if(!empty($result)) {
//       $users[$name]['uid'] =  $user->get('uid')->value;
//     }
//   }

//   // Create demo content
//   $type_options = ['pat', 'attitude', 'aptitude'];
//   $date_options = ['1473356582', '1470614400', '1467849600'];
//   foreach ($users as $name => $user_info) {
//     if(empty($user_info['kudos'])) {
//       continue;
//     }
//     foreach ($user_info['kudos'] as $value) {
//       $node = \Drupal\node\Entity\Node::create(array(
//         'type' => 'recognition',
//         'title' => 'Thank you ' . $users[$value]['field_first_name'] . '!',
//         'langcode' => 'en',
//         'uid' => $user_info['uid'],
//         'status' => 1,
//       ));
//       $node->set('body', array(
//         'value' => $users[$value]['field_first_name'] . " has been so helpful.",
//         'format' => 'full_html'
//       ));
//       $node->set('field_nominee', array(array(
//         'target_id' => $users[$value]['uid']
//       )));

//       $node->set('field_recognition_type', array(
//         'value' => $type_options[rand(0, 2)]
//       ));
      
//       $node->save();

//       $node->set('created', $date_options[rand(0, 2)]);

//       $node->save();

//     }
//   }

//   return TRUE;
// }


function _flash_badges_user_has_badge($badge_nodes, $badge_type_id) {
  if(empty($badge_nodes)) {
    return FALSE;
  }
  $has_badge = FALSE;
  foreach ($badge_nodes as $node) {
    $local_badge_type = $node->get('field_badge_type')->getValue();
    $local_badge_type_id = $local_badge_type[0]['target_id'];

    if($badge_type->id() === $badge_type_id) {
      $has_badge = TRUE;
      break;
    }
  }
  return $has_badge;
}

function _flash_badges_create_badge_content($uid, $recognition_type, $badge_type_id) {
  $node = \Drupal\node\Entity\Node::create(array(
    'type' => 'badge',
    'title' => 'Badge: ' . $badge_type_id . ' in ' . $recognition_type . ' for ' . $uid,
    'langcode' => 'en',
    'uid' => $uid,
    'status' => 1,
  ));
  $node->set('field_badge_type', array(array(
    'target_id' => $badge_type_id
  )));

  $node->set('field_recognition_type', array(
    'value' => $recognition_type
  ));
  
  $node->save();

  return $node;
}


function flash_badges_node_insert($node) {
  // dpm($node->get('type'));
  if ($node->bundle() === 'recognition') {
    // Grab our criteria
    $type = $node->get('field_recognition_type')->getValue();
    $recognition_type = $type[0]['value'];
    $nominee = $node->get('field_nominee')->getValue();
    $nominee_uid = $nominee[0]['target_id'];
    $user = \Drupal\user\Entity\User::load($nominee_uid);

    // Get count of type
    $bundle = $node->bundle();
    $query = \Drupal::entityQuery('node')
      ->condition('type', 'recognition')
      ->condition('field_recognition_type.value',$recognition_type)
      ->condition('field_nominee.target_id', array($nominee_uid), 'IN');
    $node_ids = $query->execute();
    $count = count($node_ids);

    // Get all badges
    $tax_query = \Drupal::entityQuery('taxonomy_term')
      ->condition('vid', 'user_badges');

    $badge_ids = $tax_query->execute();
    $badge_types = \Drupal\taxonomy\Entity\Term::loadMultiple($badge_ids);

    // Get user badges
    $bundle = $node->bundle();
    $badge_query = \Drupal::entityQuery('node')
      ->condition('type', 'badge')
      ->condition('field_recognition_type.value',$recognition_type)
      ->condition('uid', $nominee_uid);
    $node_ids = $badge_query->execute();
    $badge_nodes = \Drupal\node\Entity\Node::loadMultiple($node_ids);

    /// What badge eligible?
    if(!empty($badge_types)) {
      foreach ($badge_types as $badge_type) {
        $required = $badge_type->get('field_points_required')->getValue();
        $required_count = $required[0]['value'];
        if($count > $required_count) {
          // Eligible
          $badge_type_id = $badge_type->id();
          if(!_flash_badges_user_has_badge($badge_nodes, $badge_type_id)) {
            // Create node
            $new_badge_node = _flash_badges_create_badge_content($nominee_uid, $recognition_type, $badge_type_id);
          }
        }
      }
    }
  }
}